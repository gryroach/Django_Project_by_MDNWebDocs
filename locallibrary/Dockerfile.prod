###########
# BUILDER #
###########

FROM python:3.8.3-alpine as builder

WORKDIR /usr/src/locallibrary

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# установка зависимостей
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev
RUN pip install --upgrade pip


# установка зависимостей
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/locallibrary/wheels -r requirements.txt


#########
# FINAL #
#########

FROM python:3.8.3-alpine

# создаем директорию для пользователя
RUN mkdir -p /home/locallibrary

# создаем отдельного пользователя
RUN addgroup -S locallibrary && adduser -S locallibrary -G locallibrary

# создание каталога для приложения
ENV HOME=/home/locallibrary
ENV APP_HOME=/home/locallibrary/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
RUN mkdir $APP_HOME/media
WORKDIR $APP_HOME

# установка зависимостей и копирование из builder
RUN apk update && apk add libpq
COPY --from=builder /usr/src/locallibrary/wheels /wheels
COPY --from=builder /usr/src/locallibrary/requirements.txt .
RUN pip install --no-cache /wheels/*

# копирование entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# копирование проекта Django
COPY . $APP_HOME

# изменение прав для пользователя locallibrary
RUN chown -R locallibrary:locallibrary $APP_HOME

# изменение рабочего пользователя
USER locallibrary

ENTRYPOINT ["/home/locallibrary/web/entrypoint.prod.sh"]